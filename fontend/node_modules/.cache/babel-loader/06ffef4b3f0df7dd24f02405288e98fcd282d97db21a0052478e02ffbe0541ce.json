{"ast":null,"code":"var _jsxFileName = \"/media/mirajul/Backup/react-project/caleb-curry-coures/fontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { createContext, useEffect, useState } from \"react\";\nimport Header from \"./Components/Header\";\nimport AllEmployes from \"./pages/AllEmployes\";\nimport About from \"./pages/About\";\nimport Customers from \"./pages/Customers\";\nimport Project from \"./pages/Project\";\nimport Dictionary from \"./pages/Dictionary\";\nimport Definition from \"./Components/Definition\";\nimport NotFound from \"./Components/NotFound\";\nimport Customer from \"./pages/Customer\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport { baseUrl } from \"./Components/Shared\";\nimport useFatch from \"./Components/UseFatch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LoginContext = /*#__PURE__*/createContext();\nfunction App() {\n  _s();\n  const [loggedIn, setLoggedIn] = useState(localStorage.access ? true : false);\n  useEffect(() => {\n    function refreshToken() {\n      if (localStorage.refresh) {\n        const url = baseUrl + \"api/token/refresh/\";\n        fetch(url, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            refresh: localStorage.refresh\n          })\n        }).then(response => {\n          return response.json();\n        }).then(data => {\n          localStorage.access = data.access;\n          localStorage.refresh = data.refresh;\n          setLoggedIn(true);\n          console.log(data);\n        });\n      }\n    }\n    refreshToken();\n    const minute = 1000 * 60;\n    setInterval(refreshToken, minute * 1);\n  });\n  const {\n    data,\n    loading,\n    error\n  } = useFatch(\"https\");\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"LOADING...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 22\n  }, this);\n  if (error) console.log(error);\n  return (\n    /*#__PURE__*/\n    /*<LoginContext.Provider value={[loggedIn, setLoggedIn]}>\n    \t<BrowserRouter>\n    \t\t<Header>\n    \t\t\t<Routes>\n    \t\t\t\t<Route path=\"/\" element={<AllEmployes />} />\n    \t\t\t\t<Route path=\"/about\" element={<About />} />\n    \t\t\t\t\t<Route path=\"/customers\" element={<Customers />} />\n    \t\t\t\t<Route path=\"/customers/:id\" element={<Customer />} />\n    \t\t\t\t\t<Route path=\"/projects\" element={<Project />} />\n    \t\t\t\t\t<Route path=\"/dictionary\" element={<Dictionary />} />\n    \t\t\t\t<Route path=\"/dictionary/:search\" element={<Definition />} />\n    \t\t\t\t\t<Route path=\"/login\" element={<Login />} />\n    \t\t\t\t\t<Route path=\"/register\" element={<Register />} />\n    \t\t\t\t\t<Route path=\"/404\" element={<NotFound />} />\n    \t\t\t\t<Route path=\"*\" element={<NotFound />} />\n    \t\t\t</Routes>\n    \t\t</Header>\n    \t</BrowserRouter>\n    </LoginContext.Provider>*/\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [data.setup, \":\", data.delivery]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 3\n    }, this)\n  );\n}\n_s(App, \"2eSv1TNl+k2Ayfc+DVzAZ/I2UYo=\", false, function () {\n  return [useFatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Routes","Route","createContext","useEffect","useState","Header","AllEmployes","About","Customers","Project","Dictionary","Definition","NotFound","Customer","Login","Register","baseUrl","useFatch","jsxDEV","_jsxDEV","LoginContext","App","_s","loggedIn","setLoggedIn","localStorage","access","refreshToken","refresh","url","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","minute","setInterval","loading","error","children","fileName","_jsxFileName","lineNumber","columnNumber","setup","delivery","_c","$RefreshReg$"],"sources":["/media/mirajul/Backup/react-project/caleb-curry-coures/fontend/src/App.js"],"sourcesContent":["import { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { createContext, useEffect, useState } from \"react\";\n\nimport Header from \"./Components/Header\";\nimport AllEmployes from \"./pages/AllEmployes\";\nimport About from \"./pages/About\";\nimport Customers from \"./pages/Customers\";\nimport Project from \"./pages/Project\";\nimport Dictionary from \"./pages/Dictionary\";\nimport Definition from \"./Components/Definition\";\nimport NotFound from \"./Components/NotFound\";\nimport Customer from \"./pages/Customer\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport { baseUrl } from \"./Components/Shared\";\n\nimport useFatch from \"./Components/UseFatch\";\n\nexport const LoginContext = createContext();\n\nfunction App() {\n\tconst [loggedIn, setLoggedIn] = useState(localStorage.access ? true : false);\n\n\tuseEffect(() => {\n\t\tfunction refreshToken() {\n\t\t\tif (localStorage.refresh) {\n\t\t\t\tconst url = baseUrl + \"api/token/refresh/\";\n\n\t\t\t\tfetch(url, {\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\trefresh: localStorage.refresh,\n\t\t\t\t\t}),\n\t\t\t\t})\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\treturn response.json();\n\t\t\t\t\t})\n\t\t\t\t\t.then((data) => {\n\t\t\t\t\t\tlocalStorage.access = data.access;\n\t\t\t\t\t\tlocalStorage.refresh = data.refresh;\n\t\t\t\t\t\tsetLoggedIn(true);\n\t\t\t\t\t\tconsole.log(data);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\trefreshToken();\n\t\tconst minute = 1000 * 60;\n\t\tsetInterval(refreshToken, minute * 1);\n\t});\n\n\tconst { data, loading, error } = useFatch(\"https\");\n\n\tif (loading) return <h1>LOADING...</h1>;\n\tif (error) console.log(error);\n\n\treturn (\n\t\t/*<LoginContext.Provider value={[loggedIn, setLoggedIn]}>\n\t\t\t<BrowserRouter>\n\t\t\t\t<Header>\n\t\t\t\t\t<Routes>\n\t\t\t\t\t\t<Route path=\"/\" element={<AllEmployes />} />\n\t\t\t\t\t\t<Route path=\"/about\" element={<About />} />\n\n\t\t\t\t\t\t<Route path=\"/customers\" element={<Customers />} />\n\t\t\t\t\t\t<Route path=\"/customers/:id\" element={<Customer />} />\n\n\t\t\t\t\t\t<Route path=\"/projects\" element={<Project />} />\n\n\t\t\t\t\t\t<Route path=\"/dictionary\" element={<Dictionary />} />\n\t\t\t\t\t\t<Route path=\"/dictionary/:search\" element={<Definition />} />\n\n\t\t\t\t\t\t<Route path=\"/login\" element={<Login />} />\n\n\t\t\t\t\t\t<Route path=\"/register\" element={<Register />} />\n\n\t\t\t\t\t\t<Route path=\"/404\" element={<NotFound />} />\n\t\t\t\t\t\t<Route path=\"*\" element={<NotFound />} />\n\t\t\t\t\t</Routes>\n\t\t\t\t</Header>\n\t\t\t</BrowserRouter>\n\t\t</LoginContext.Provider>*/\n\t\t<div>\n\t\t\t<h1>\n\t\t\t\t{data.setup}:{data.delivery}\n\t\t\t</h1>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}